{"version":3,"sources":["../../src/lib/file-paths.js"],"names":["FilePaths","constructor","logger","appFolderName","Error","appFolderPath","fs","existsSync","mkdirSync","e","logError","logInfo","documentsPath","path","join","os","homedir","dbFilePath","csvFilePath","settingsPath","logsPath"],"mappings":";;;;;;;AAAA;;;;AACA;;;;AACA;;;;;;AAEO,MAAMA,SAAN,CAAgB;AACnBC,gBAAYC,MAAZ,EAAoBC,aAApB,EAAmC;AAC/B,YAAI,CAACA,aAAL,EAAoB,MAAM,IAAIC,KAAJ,CAAU,kDAAV,CAAN;AACpB,aAAKD,aAAL,GAAqBA,aAArB;;AAEA,cAAME,gBAAgB,KAAKA,aAAL,EAAtB;AACA,YAAI,CAACC,aAAGC,UAAH,CAAcF,aAAd,CAAL,EAAmC;AAC/B,gBAAI;AACAC,6BAAGE,SAAH,CAAaH,aAAb;AACH,aAFD,CAEE,OAAMI,CAAN,EAAS;AACPP,uBAAOQ,QAAP,CAAiB,kCAAiCL,aAAc,OAAMI,CAAE,EAAxE;AACH;;AAEDP,mBAAOS,OAAP,CAAgB,kBAAiBN,aAAc,EAA/C;AACH,SARD,MAQM;AACFH,mBAAOS,OAAP,CAAgB,gBAAeN,aAAc,EAA7C;AACH;AACJ;;AAEDA,oBAAgB;AACZ,cAAMO,gBAAgBC,eAAKC,IAAL,CAAUC,aAAGC,OAAH,EAAV,EAAwB,WAAxB,CAAtB;;AAEA,eAAOH,eAAKC,IAAL,CAAUF,aAAV,EAAyB,KAAKT,aAA9B,CAAP;AACH;;AAEDc,iBAAa;AACT,eAAOJ,eAAKC,IAAL,CAAU,KAAKT,aAAL,EAAV,EAAgC,aAAhC,CAAP;AACH;;AAEDa,kBAAc;AACV,eAAOL,eAAKC,IAAL,CAAU,KAAKT,aAAL,EAAV,EAAgC,aAAhC,CAAP;AACH;;AAEDc,mBAAe;AACX,eAAON,eAAKC,IAAL,CAAU,KAAKT,aAAL,EAAV,EAAgC,eAAhC,CAAP;AACH;;AAEDe,eAAW;AACP,eAAOP,eAAKC,IAAL,CAAU,KAAKT,aAAL,EAAV,EAAgC,UAAhC,CAAP;AACH;AAvCkB;QAAVL,S,GAAAA,S","file":"file-paths.js","sourcesContent":["import os from 'os';\nimport fs from 'fs';\nimport path from 'path';\n\nexport class FilePaths {\n    constructor(logger, appFolderName) {\n        if (!appFolderName) throw new Error('FilePaths: application folder name not specified');\n        this.appFolderName = appFolderName;\n\n        const appFolderPath = this.appFolderPath();\n        if (!fs.existsSync(appFolderPath)) {\n            try {\n                fs.mkdirSync(appFolderPath);\n            } catch(e) {\n                logger.logError(`error while creating directory ${appFolderPath} \\n ${e}`);\n            }\n\n            logger.logInfo(`Created folder ${appFolderPath}`);\n        }else {\n            logger.logInfo(`Using folder ${appFolderPath}`);\n        }\n    }\n\n    appFolderPath() {\n        const documentsPath = path.join(os.homedir(), \"Documents\");\n\n        return path.join(documentsPath, this.appFolderName);\n    }\n\n    dbFilePath() {\n        return path.join(this.appFolderPath(), 'database.db');\n    }\n\n    csvFilePath() {\n        return path.join(this.appFolderPath(), 'Courses.csv');\n    }\n\n    settingsPath() {\n        return path.join(this.appFolderPath(), 'settings.json');\n    }\n\n    logsPath() {\n        return path.join(this.appFolderPath(), 'logs.txt');\n    }\n}\n"]}