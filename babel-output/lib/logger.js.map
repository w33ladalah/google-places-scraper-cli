{"version":3,"sources":["../../src/lib/logger.js"],"names":["Logger","constructor","process","versions","electron","_htmlLogger","document","getElementById","_logs","logInfo","msg","log","logError","style","insertAdjacentHTML","scrollTop","scrollHeight","console","push","exportLogs","path","Promise","resolve","reject","fs","writeFile","join","err"],"mappings":";;;;;;;AAAA;;;;;;AACO,MAAMA,MAAN,CAAa;AAChBC,kBAAc;AACV,YAAIC,QAAQC,QAAR,CAAiBC,QAArB,EAA+B;AAC3B,iBAAKC,WAAL,GAAmBC,SAASC,cAAT,CAAwB,QAAxB,CAAnB;AACH;;AAED,aAAKC,KAAL,GAAa,EAAb;AACH;;AAEDC,YAAQC,GAAR,EAAa;AACT,aAAKC,GAAL,CAASD,GAAT;AACH;;AAEDE,aAASF,GAAT,EAAc;AACV,aAAKC,GAAL,CAASD,GAAT,EAAc,aAAd;AACH;;AAEDC,QAAID,GAAJ,EAASG,KAAT,EAAgB;AACZ,YAAI,CAACH,GAAL,EAAU;;AAEV,YAAI,KAAKL,WAAT,EAAsB;AAClB,iBAAKA,WAAL,CACCS,kBADD,CACoB,WADpB,EACkC,gBAAeD,SAAS,eAAgB,KAAIH,GAAI,MADlF;AAEA;AACA,iBAAKL,WAAL,CAAiBU,SAAjB,GAA6B,KAAKV,WAAL,CAAiBW,YAA9C;AACH,SALD,MAKM;AACFC,oBAAQN,GAAR,CAAYD,GAAZ;AACH;;AAED,aAAKF,KAAL,CAAWU,IAAX,CAAgBR,GAAhB;AACH;;AAEDS,eAAWC,IAAX,EAAiB;AACb,eAAO,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACpCC,yBAAGC,SAAH,CAAaL,IAAb,EAAmB,KAAKZ,KAAL,CAAWkB,IAAX,CAAgB,IAAhB,CAAnB,EAA2CC,GAAD,IAAS;AAC/CL;AACH,aAFD;AAGH,SAJM,CAAP;AAKH;AAtCe;QAAPtB,M,GAAAA,M","file":"logger.js","sourcesContent":["import fs from 'fs';\nexport class Logger {\n    constructor() {\n        if (process.versions.electron) { \n            this._htmlLogger = document.getElementById('logger');\n        }\n\n        this._logs = [];\n    }\n\n    logInfo(msg) {\n        this.log(msg);\n    }\n\n    logError(msg) {\n        this.log(msg, 'color: red;')\n    }\n\n    log(msg, style) {\n        if (!msg) return;\n        \n        if (this._htmlLogger) {\n            this._htmlLogger\n            .insertAdjacentHTML('beforeend', `\\n <p style=\"${style || 'color: black;'}\">${msg}</p>`);\n            // Scroll to bottom\n            this._htmlLogger.scrollTop = this._htmlLogger.scrollHeight;\n        }else {\n            console.log(msg);\n        }\n\n        this._logs.push(msg);\n    }\n\n    exportLogs(path) {\n        return new Promise((resolve, reject) => {\n            fs.writeFile(path, this._logs.join('\\n'), (err) => {\n                resolve();\n            });\n        });\n    }\n}"]}