{"version":3,"sources":["../../src/lib/db.js"],"names":["sequelize","Sequelize","DB_NAME","DB_USER","DB_PASSWORD","host","DB_HOST","dialect","authenticate","then","console","log","catch","err","error"],"mappings":";;;;;;AAAA;;AACA;;AAEA,MAAMA,YAAY,IAAIC,oBAAJ,CAAcC,eAAd,EAAuBC,eAAvB,EAAgCC,mBAAhC,EAA6C;AAC9DC,OAAMC,eADwD;AAE9DC,UAAS;AAFqD,CAA7C,CAAlB;;AAKAP,UACEQ,YADF,GAEEC,IAFF,CAEO,MAAM;AACXC,SAAQC,GAAR,CAAY,+CAAZ,EADW,CACmD;AAC9D,CAJF,EAKEC,KALF,CAKSC,GAAD,IAAS;AACfH,SAAQI,KAAR,CAAc,oCAAd,EAAoDD,GAApD,EADe,CAC2C;AAC1D,CAPF;;kBAUeb,S","file":"db.js","sourcesContent":["import { Sequelize } from \"sequelize\";\nimport {DB_HOST, DB_NAME, DB_USER, DB_PASSWORD} from \"../config\";\n\nconst sequelize = new Sequelize(DB_NAME, DB_USER, DB_PASSWORD, {\n\thost: DB_HOST,\n\tdialect: 'mysql'\n});\n\nsequelize\n\t.authenticate()\n\t.then(() => {\n\t\tconsole.log('Connection has been established successfully.'); // eslint-disable-line no-console\n\t})\n\t.catch((err) => {\n\t\tconsole.error('Unable to connect to the database:', err); // eslint-disable-line no-console\n\t});\n\n\nexport default sequelize;\n"]}